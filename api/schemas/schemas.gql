# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Artist {
  avatar: String
  bio: String
  id: ID!
  mainGenre: String!
  title: String!
}

type ArtistOutput {
  data: Artist
  message: String!
}

input CreateArtistInput {
  avatar: String
  bio: String
  mainGenre: String!
  title: String!
}

input CreateDiscoInput {
  artistId: ID!
  avatar: String
  contributors: String
  genres: String
  recorder: String!
  releaseDate: DateTime!
  title: String!
  type: String!
}

input CreateUserInput {
  email: String!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Disco {
  artist: Artist
  artistId: ID!
  avatar: String
  contributors: String
  genres: String
  id: ID!
  recorder: String!
  releaseDate: DateTime!
  title: String!
  type: String!
}

type MessageDeleteOutput {
  message: String!
}

type Mutation {
  createArtist(data: CreateArtistInput!): ArtistOutput!
  createDisco(data: CreateDiscoInput!): Disco!
  createUser(data: CreateUserInput!): UserOutput!
  deleteArtist(id: String!): MessageDeleteOutput!
  deleteUser(id: String!): MessageDeleteOutput!
  updateUser(data: UpdateUserInput!): UserOutput!
}

type Query {
  getArtists: [Artist!]
  getDiscoById(id: String!): Disco
  getDiscos: [Disco!]
  getUsers: [User!]
}

input UpdateUserInput {
  active: Boolean
  email: String
  id: ID!
  name: String
}

type User {
  active: Boolean!
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

type UserOutput {
  data: User
  message: String!
}
